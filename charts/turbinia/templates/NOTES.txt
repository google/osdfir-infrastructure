Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get all {{ .Release.Name }}

To connect to the Turbinia URL, run:
  {{ if .Values.oauth2proxy.enabled }}
  $ kubectl --namespace {{ .Release.Namespace }} port-forward service/{{ .Release.Name }}-oauth2proxy {{ .Values.oauth2proxy.service.port }}:{{ .Values.oauth2proxy.service.port }}
  $ echo "Visit http://127.0.0.1:{{ .Values.oauth2proxy.service.port }} to access Turbinia"
  {{ else }}
  $ kubectl --namespace {{ .Release.Namespace }} port-forward service/{{ .Release.Name }}-turbinia {{ .Values.service.port }}:{{ .Values.service.port }}
  $ echo "Visit http://127.0.0.1:{{ .Values.service.port }} to access Turbinia"
  {{ end }}

Run the following commands on your workstation to orchestrate collection and processing of forensic data with dfTimewolf:
  $ git clone https://github.com/log2timeline/dftimewolf && cd dftimewolf
  $ pip3 install poetry
  $ poetry install && poetry shell
  $ dftimewolf -h
  $ If using Timesketch, use the credentials provided in this chart when prompted
  {{- if .Values.oauth2proxy.enabled }}
  $ If using Turbinia with the Oauth2 Proxy, use the command below to generate the necessary config
    $ kubectl get secret --namespace {{ .Release.Namespace }} {{ include "turbinia.fullname" . }}-secret -o jsonpath="{.data.turbinia-secret}" | base64 -d > ~/.dftimewolf_turbinia_secrets.json
  {{- end }}