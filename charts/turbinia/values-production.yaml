## Turbinia Helm Production Values
## Please use these values to override the default Turbinia values with recommended resources and replica counts for production installations
##
## @section Turbinia configuration
## The following section covers configuration parameters for Turbinia
##
## @section Turbinia server configuration
##
server:
  image:
    ## @param server.image.repository Turbinia image repository
    ##
    repository: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-server
    ## @param server.image.pullPolicy Turbinia image pull policy
    ## ref https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    ##
    pullPolicy: IfNotPresent
    ## @param server.image.tag Overrides the image tag whose default is the chart appVersion
    ##
    tag: latest
    ## @param server.image.imagePullSecrets Specify secrets if pulling from a private repository
    ## ref https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## @param server.podSecurityContext Holds pod-level security attributes and common server container settings
  ## Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  ## e.g.
  ## fsgroup: 2000
  ##
  podSecurityContext: {}
  ## @param server.securityContext Holds security configuration that will be applied to the server container
  ## Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  ## e.g.
  ## capabilities
  ##   drop:
  ##   - ALL
  ## readOnlyRootFilesystem: true
  ## runAsNonRoot: true
  ## runAsUser: 1000
  ##
  securityContext: {}
  ## Turbinia Server resource requests and limits
  ## @param server.resources.requests.cpu The requested cpu for the server container
  ## @param server.resources.requests.memory The requested memory for the server container
  ## @param server.resources.limits.cpu The resources cpu limits for the server container
  ## @param server.resources.limits.memory The resources memory limits for the server container
  ##
  resources:
    requests:
      cpu: 1000m
      memory: 2000Mi
    limits:
      cpu: 8000m
      memory: 16000Mi
  ## @param server.nodeSelector Node labels for Turbinia server pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param server.tolerations Tolerations for Turbinia server pods assignment
  ## ref https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  tolerations: []
  ## @param server.affinity Affinity for Turbinia server pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
## @section Turbinia worker configuration
##
worker:
  image:
    ## @param worker.image.repository Turbinia image repository
    ##
    repository: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-worker
    ## @param worker.image.pullPolicy Turbinia image pull policy
    ## ref https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    ##
    pullPolicy: IfNotPresent
    ## @param worker.image.tag Overrides the image tag whose default is the chart appVersion
    ##
    tag: latest
    ## @param worker.image.imagePullSecrets Specify secrets if pulling from a private repository
    ## ref https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## @param worker.replicaCount Number of worker pods to run at once
  ## Disabled if the value worker.autoscaling.enabled is enabled.
  replicaCount: 5
  ## Worker autoscaler configuration
  ## ref https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    ## @param worker.autoscaling.enabled Enables Turbinia Worker autoscaling
    ##
    enabled: true
    ## @param worker.autoscaling.minReplicas Minimum amount of worker pods to run at once
    ##
    minReplicas: 5
    ## @param worker.autoscaling.maxReplicas Maximum amount of worker pods to run at once
    ##
    maxReplicas: 500
    ## @param worker.autoscaling.targetCPUUtilizationPercentage CPU scaling metric workers will scale based on
    ##
    targetCPUUtilizationPercentage: 80
  ## @param worker.podSecurityContext Holds pod-level security attributes and common worker container settings
  ## Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  ## e.g.
  ## fsgroup: 2000
  ##
  podSecurityContext: {}
  ## Worker Security Context Configuration
  ## Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  ##
  securityContext:
    ## @param worker.securityContext.privileged Runs the container as priveleged. Due to Turbinia attaching and detaching disks, a priveleged container is required for the worker container.
    ##
    privileged: true
  ## Turbinia Worker resource requests and limits
  ## @param worker.resources.requests.cpu The requested cpu for the worker container
  ## @param worker.resources.requests.memory The requested memory for the worker container
  ## @param worker.resources.limits.cpu The resources cpu limits for the worker container
  ## @param worker.resources.limits.memory The resources memory limits for the worker container
  ##
  resources:
    requests:
      cpu: 1500m
      memory: 2048Mi
    limits:
      cpu: 31000m
      memory: 65536Mi
  ## @param worker.nodeSelector Node labels for Turbinia worker pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param worker.tolerations Tolerations for Turbinia worker pods assignment
  ## ref https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  tolerations: []
  ## @param worker.affinity Affinity for Turbinia worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
## @section Turbinia API / Web configuration
##
api:
  image:
    ## @param api.image.repository Turbinia image repository for API / Web server
    ##
    repository: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-api-server
    ## @param api.image.pullPolicy Turbinia image pull policy
    ## ref https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    ##
    pullPolicy: IfNotPresent
    ## @param api.image.tag Overrides the image tag whose default is the chart appVersion
    ##
    tag: latest
    ## @param api.image.imagePullSecrets Specify secrets if pulling from a private repository
    ## ref https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## API podSecurity Context configuration
  ## Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  ## e.g.
  ## fsgroup: 2000
  ##
  podSecurityContext:
    seccompProfile:
      ## @param api.podSecurityContext.seccompProfile.type Deploys the default seccomp profile to the container
      ##
      type: RuntimeDefault
  ## @param api.securityContext Holds security configuration that will be applied to the API / Web container
  ## Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  ## e.g.
  ## capabilities
  ##   drop:
  ##   - ALL
  ## readOnlyRootFilesystem: true
  ## runAsNonRoot: true
  ## runAsUser: 1000
  ##
  securityContext: {}
  ## Turbinia API / Web resource requests and limits
  ## @param api.resources.requests.cpu The requested cpu for the frontend container
  ## @param api.resources.requests.memory The requested memory for the frontend container
  ## @param api.resources.limits.cpu The resources cpu limits for the frontend container
  ## @param api.resources.limits.memory The resources memory limits for the frontend container
  ##
  resources:
    requests:
      cpu: 2000m
      memory: 4000Mi
    limits:
      cpu: 8000m
      memory: 16000Mi
  ## @param api.nodeSelector Node labels for Turbinia api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param api.tolerations Tolerations for Turbinia api pods assignment
  ## ref https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  tolerations: []
  ## @param api.affinity Affinity for Turbinia api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
## @section Turbinia controller configuration
## The controller is not required to use Turbinia and serves as an extra
## container that can be used for troubleshooting
##
controller:
  ## @param controller.enabled If enabled, deploys the Turbinia controller
  ##
  enabled: false
  image:
    ## @param controller.image.repository Turbinia image repository for the Turbinia controller
    ##
    repository: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-controller
    ## @param controller.image.pullPolicy Turbinia image pull policy
    ## ref https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    ##
    pullPolicy: IfNotPresent
    ## @param controller.image.tag Overrides the image tag whose default is the chart appVersion
    ##
    tag: latest
    ## @param controller.image.imagePullSecrets Specify secrets if pulling from a private repository
    ## ref https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## @param controller.podSecurityContext Holds pod-level security attributes and common API / Web container settings
  ## Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  ## e.g.
  ## fsgroup: 2000
  ##
  podSecurityContext: {}
  ## @param controller.securityContext Holds security configuration that will be applied to the API / Web container
  ## Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  ## e.g.
  ## capabilities
  ##   drop:
  ##   - ALL
  ## readOnlyRootFilesystem: true
  ## runAsNonRoot: true
  ## runAsUser: 1000
  ##
  securityContext: {}
  ## Turbinia controller resource requests and limits
  ## @param controller.resources.requests.cpu The requested cpu for the controller container
  ## @param controller.resources.requests.memory The requested memory for the controller container
  ## @param controller.resources.limits.cpu The resources cpu limits for the controller container
  ## @param controller.resources.limits.memory The resources memory limits for the controller container
  ##
  resources:
    requests:
      cpu: 1000m
      memory: 2000Mi
    limits:
      cpu: 4000m
      memory: 4000Mi
  ## @param controller.nodeSelector Node labels for Turbinia controller pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param controller.tolerations Tolerations for Turbinia controller pods assignment
  ## ref https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  tolerations: []
  ## @param controller.affinity Affinity for Turbinia controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
## Turbinia persistence storage parameters
##
persistence:
  ## @param persistence.name Turbinia persistent volume name
  ##
  name: turbiniavolume
  ## @param persistence.size Turbinia persistent volume size
  ##
  size: 1T
  ## @param persistence.storageClass PVC Storage Class for Turbinia volume
  ## If default, storageClassName: <storageClass>, which enables GCP Filestore
  ##   when using the Filestore CSI Driver
  ##   ref https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/filestore-csi-driver#access
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ## ref https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/#using-dynamic-provisioning
  ## 
  storageClass: standard-rwx
  ## @param persistence.accessModes PVC Access Mode for Turbinia volume
  ## Access mode may need to be updated based on the StorageClass
  ## ref https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
  ## 
  accessModes:
    - ReadWriteMany
## @section Third Party Configuration
##
## @section Redis configuration parameters
## IMPORTANT: Redis is deployed with Auth enabled by default
## To see a full list of available values, run helm show values charts/redis*
##
redis:
  ## @param redis.enabled enabled Enables the Redis deployment
  ##
  enabled: true
  ## @param redis.sentinel.enabled Enables Redis Sentinel on Redis pods
  ## IMPORTANT: This has not been tested for Turbinia so would leave this disabled
  ##
  sentinel:
    enabled: false
  ## Master Redis Service configuration
  ##
  master:
    ## @param redis.master.count Number of Redis master instances to deploy (experimental, requires additional configuration)
    ##
    count: 1
    ## Redis master persistence configuration
    ##
    persistence:
      ## @param redis.master.persistence.size Persistent Volume size
      ##
      size: 500Gi
    ## Redis master resource requests and limits
    ## @param redis.master.resources.requests.cpu The requested cpu for the Redis master containers
    ## @param redis.master.resources.requests.memory The requested memory for the Redis master containers 
    ## @param redis.master.resources.limits.cpu The resources cpu limits for the Redis master containers
    ## @param redis.master.resources.limits.memory The resources memory limits for the Redis master containers
    ##
    resources:
      requests:
        cpu: 4000m
        memory: 8Gi
      limits:
        cpu: 8000m
        memory: 16Gi
  ## Redis replicas configuration parameters
  ##
  replica:
    ## @param redis.replica.replicaCount Number of Redis replicas to deploy
    ##
    replicaCount: 3
    ## Redis replicas persistence configuration
    ##
    persistence:
      ## @param redis.replica.persistence.size Persistent Volume size
      ##
      size: 500Gi
    ## Redis Replica resource requests and limits
    ## @param redis.replica.resources.requests.cpu The requested cpu for the Redis replica containers
    ## @param redis.replica.resources.requests.memory The requested memory for the Redis replica containers 
    ## @param redis.replica.resources.limits.cpu The resources cpu limits for the Redis replica containers
    ## @param redis.replica.resources.limits.memory The resources memory limits for the Redis replica containers
    ##
    resources:
      requests:
        cpu: 4000m
        memory: 8Gi
      limits:
        cpu: 8000m
        memory: 16Gi
