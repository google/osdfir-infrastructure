## OSDFIR Infrastructure Helm Chart
## Please use this Helm chart for deploying Open Source Digital Forensics Tools
## to a Kubernetes environment.
## The following tools are supported in this deployment:
## - Timesketch; ref https://github.com/google/timesketch
## - Yeti; ref https://github.com/yeti-platform/yeti
##
## @section Global parameters
## Please, note that this will override the parameters configured to use the global value
##
global:
  ## Global Persistence Configuration
  ##
  timesketch:
    ## @param global.timesketch.enabled Enables the Timesketch deployment (only used in the main OSDFIR Infrastructure Helm chart)
    ##
    enabled: true
  yeti:
    ## @param global.yeti.enabled Enables the Yeti deployment (only used in the main OSDFIR Infrastructure Helm chart)
    ##
    enabled: true
  ## Global ingress parameters used to configure Timesketch, Yeti under a loadbalancer
  ##
  ingress:
    ## @param global.ingress.enabled Enable the global loadbalancer for external access (only used in the main OSDFIR Infrastructure Helm chart)
    ##
    enabled: false
    ## @param global.ingress.timesketchHost Domain name Timesketch will be hosted under
    ##
    timesketchHost: ""
    ## @param global.ingress.yetiHost Domain name Yeti will be hosted under
    ##
    yetiHost: ""
    ## @param global.ingress.className IngressClass that will be be used to implement the Ingress
    ## ref https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/
    ##
    className: ""
    ## @param global.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param global.ingress.certManager Add the corresponding annotations for cert-manager integration
    ##
    certManager: false
    ## GCP ingress configuration
    ##
    gcp:
      ## @param global.ingress.gcp.managedCertificates Enabled GCP managed certificates for your domain
      ## ref https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs
      ##
      managedCertificates: false
      ## @param global.ingress.gcp.staticIPName Name of the static IP address you reserved in GCP
      ## This is required when using "gce" in ingress.className
      ## ref https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address
      ##
      staticIPName: ""
      ## @param global.ingress.gcp.staticIPV6Name Name of the static IPV6 address you reserved in GCP. This can be optionally provided to deploy a loadbalancer with an IPV6 address
      ## ref https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address
      ##
      staticIPV6Name: ""
## @section Timesketch configuration
## To see the full list of configurable values, run helm show values charts/timesketch/
##
timesketch:
  ## Timesketch Configuration Parameters
  ## ref: https://github.com/google/timesketch/blob/master/data/timesketch.conf
  ##
  config:
    ## @param timesketch.config.existingConfigMap Use an existing ConfigMap as the default Timesketch config.
    ## Please ensure that the ConfigMap has been created prior to deployment
    ## (e.g. kubectl create configmap timesketch-configs --from-file=timesketch-configs/)
    ##
    existingConfigMap: ""
    ## @param timesketch.config.createUser Creates a default Timesketch user that can be used to login to Timesketch after deployment
    ##
    createUser: true
    ## Timesketch OIDC configuration
    ##
    oidc:
      ## @param timesketch.config.oidc.enabled Enables Timesketch OIDC authentication (currently only supports Google OIDC)
      ##
      enabled: false
      ## @param timesketch.config.oidc.existingSecret Existing secret with the client ID, secret and cookie secret
      ##
      existingSecret: ""
      ## Allowed emails files for Timesketch OIDC
      ##
      authenticatedEmailsFile:
        ## @param timesketch.config.oidc.authenticatedEmailsFile.enabled Enables email authentication
        ##
        enabled: true
        ## @param timesketch.config.oidc.authenticatedEmailsFile.existingSecret Existing secret with a list of emails
        ## e.g. kubectl create secret generic allowed-emails --from-file=authenticated-emails-list=allowed-emails.txt
        existingSecret: ""
        ## @param timesketch.config.oidc.authenticatedEmailsFile.content Allowed emails list (one email per line)
        ##
        content: ""
        ## One email per line
        ## e.g:
        ## content: |-
        ##   name1@domain
        ##   name2@domain
  ## Timesketch Frontend Configuration
  ##
  frontend:
    ## Timesketch Frontend resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param timesketch.frontend.resources.limits The resources limits for the frontend container
    ## @param timesketch.frontend.resources.requests The requested resources for the frontend container
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests: {}
    ## @param timesketch.frontend.nodeSelector Node labels for Timesketch frontend pods assignment
    ##
    nodeSelector: {}
  ## Timesketch Worker Configuration
  ##
  worker:
    ## Timesketch Worker resource requests and limits
    ## @param timesketch.worker.resources.limits The resources limits for the worker container
    ## @param timesketch.worker.resources.requests.cpu The requested cpu for the worker container
    ## @param timesketch.worker.resources.requests.memory The requested memory for the worker container
    ##
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      requests:
        cpu: 250m
        memory: 256Mi
    ## @param timesketch.worker.nodeSelector Node labels for Timesketch worker pods assignment
    ##
    nodeSelector: {}
  ## Timesketch Nginx Configuration
  ##
  nginx:
    ## Timesketch Nginx resource requests and limits
    ## @param timesketch.nginx.resources.limits The resources limits for the nginx container
    ## @param timesketch.nginx.resources.requests.cpu The requested cpu for the nginx container
    ## @param timesketch.nginx.resources.requests.memory The requested memory for the nginx container
    ##
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      requests:
        cpu: 250m
        memory: 256Mi
    ## @param timesketch.nginx.nodeSelector Node labels for Timesketch nginx pods assignment
    ##
    nodeSelector: {}
  ## Persistence Storage Parameters
  ##
  persistence:
    ## @param timesketch.persistence.size Timesketch persistent volume size
    ##
    size: 2Gi
    ## @param timesketch.persistence.storageClass PVC Storage Class for Timesketch volume
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ## ref https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/#using-dynamic-provisioning
    ##
    storageClass: ""
    ## @param timesketch.persistence.accessModes PVC Access Mode for Timesketch volume
    ## Access mode may need to be updated based on the StorageClass
    ## ref https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
    ##
    accessModes:
      - ReadWriteOnce
  ## Security Context Parameters
  ##
  securityContext:
    ## @param timesketch.securityContext.enabled Enable SecurityContext for Timesketch pods
    ##
    enabled: true
  ## Third Party Timesketch Configuration
  ## This section contains all the main configuration for third party dependencies Timesketch needs to run
  ##
  ## Opensearch Configuration Parameters
  ## IMPORTANT: The Opensearch Security Plugin / TLS has not yet been configured by default
  ## ref on steps required https://opensearch.org/docs/1.1/security-plugin/configuration/index/
  ##
  opensearch:
    ## @param timesketch.opensearch.replicas Number of Opensearch instances to deploy
    ##
    replicas: 1
    ## @param timesketch.opensearch.sysctlInit.enabled Sets optimal sysctl's through privileged initContainer
    ##
    sysctlInit:
      enabled: true
    ## @param timesketch.opensearch.opensearchJavaOpts Sets the size of the Opensearch Java heap
    ## It is recommended to use at least half the system's available ram
    ##
    opensearchJavaOpts: "-Xmx512M -Xms512M"
    ## Opensearch persistence configuration
    ##
    persistence:
      ## @param timesketch.opensearch.persistence.size Opensearch Persistent Volume size. A persistent volume would be created for each Opensearch replica running
      ##
      size: 2Gi
    ## Opensearch resource requests
    ## @param timesketch.opensearch.resources.requests.cpu The requested cpu for the Opensearch container
    ## @param timesketch.opensearch.resources.requests.memory The requested memory for the Opensearch container
    ##
    resources:
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
    ## @param timesketch.opensearch.nodeSelector Node labels for Opensearch pods assignment
    ##
    nodeSelector: {}
  ## Redis Configuration Parameters
  ##
  redis:
    ## Redis persistence configuration
    ##
    persistence:
      ## @param timesketch.redis.persistence.size Redis Persistent Volume size
      ##
      size: 2Gi
    ## Redis resource requests and limits
    ## @param timesketch.redis.resources.limits The resources limits for the Redis containers
    ## @param timesketch.redis.resources.requests The requested resources for the Redis containers
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests: {}
    ## @param timesketch.redis.nodeSelector Node labels for Timesketch Redis pods assignment
    ##
    nodeSelector: {}
  ## Postgresql Configuration Parameters
  ##
  postgresql:
    ## PostgreSQL persistence configuration
    ##
    persistence:
      ## @param timesketch.postgresql.persistence.size PostgreSQL Persistent Volume size
      ##
      size: 2Gi
    ## PostgreSQL resource requests and limits
    ## @param timesketch.postgresql.resources.limits The resources limits for the PostgreSQL primary containers
    ## @param timesketch.postgresql.resources.requests.cpu The requested cpu for the PostgreSQL primary containers
    ## @param timesketch.postgresql.resources.requests.memory The requested memory for the PostgreSQL primary containers
    ##
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
    ## @param timesketch.postgresql.nodeSelector Node labels for Timesketch postgresql pods assignment
    ##
    nodeSelector: {}
## @section Yeti configuration
##
yeti:
  ## Yeti frontend configuration
  ##
  frontend:
    ## Yeti frontend resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param yeti.frontend.resources.limits Resource limits for the frontend container
    ## @param yeti.frontend.resources.requests Requested resources for the frontend container
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests: {}
    ## @param yeti.frontend.nodeSelector Node labels for Yeti frontend pods assignment
    ##
    nodeSelector: {}
  ## Yeti api configuration
  ##
  api:
    ## Yeti api resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param yeti.api.resources.limits Resource limits for the API container
    ## @param yeti.api.resources.requests Requested resources for the API container
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests: {}
    ## @param yeti.api.nodeSelector Node labels for Yeti API pods assignment
    ##
    nodeSelector: {}
  ## Yeti Tasks configuration
  ##
  tasks:
    ## Yeti tasks resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param yeti.tasks.resources.limits Resource limits for the tasks container
    ## @param yeti.tasks.resources.requests Requested resources for the tasks container
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests: {}
    ## @param yeti.tasks.nodeSelector Node labels for Yeti tasks pods assignment
    ##
    nodeSelector: {}
  ## Yeti Configuration Parameters
  ## ref: https://github.com/yeti-platform/yeti/blob/main/yeti.conf.sample
  ##
  config:
    ## Yeti OIDC configuration
    ##
    oidc:
      ## @param yeti.config.oidc.enabled Enables Yeti OIDC authentication (currently only supports Google OIDC)
      ##
      enabled: false
      ## @param yeti.config.oidc.existingSecret Existing secret with the client ID, secret and cookie secret
      ##
      existingSecret: ""
  ## Third Party Configuration
  ## This section contains all the main configuration for third party dependencies Yeti needs to run
  ##
  ## Redis Configuration Parameters
  ##
  redis:
    ## Redis persistence configuration
    ##
    persistence:
      ## @param yeti.redis.persistence.size Redis Persistent Volume size
      ##
      size: 2Gi
    ## Redis resource requests and limits
    ## @param yeti.redis.resources.limits The resources limits for the Redis containers
    ## @param yeti.redis.resources.requests The requested resources for the Redis containers
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests: {}
    ## @param yeti.redis.nodeSelector Node labels for Yeti redis pods assignment
    ##
    nodeSelector: {}
  ## Yeti Arangodb configuration
  ##
  arangodb:
    ## Persistence Storage Parameters for Yeti ArangoDB storage
    ##
    persistence:
      ## @param yeti.arangodb.persistence.size Yeti ArangoDB persistent volume size
      ##
      size: 2Gi
    ## Yeti arangodb resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param yeti.arangodb.resources.limits Resource limits for the arangodb container
    ## @param yeti.arangodb.resources.requests Requested resources for the arangodb container
    resources:
      ## Example:
      ## limits:
      ##    cpu: 500m
      ##    memory: 1Gi
      limits: {}
      ## Example:
      ## requests:
      ##    cpu: 500m
      ##    memory: 1Gi
      requests: {}
    ## @param yeti.arangodb.nodeSelector Node labels for Yeti arangodb pods assignment
    ##
    nodeSelector: {}
