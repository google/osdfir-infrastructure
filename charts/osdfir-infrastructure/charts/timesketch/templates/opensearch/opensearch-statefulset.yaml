apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-opensearch-cluster
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: opensearch
    {{- include "timesketch.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.opensearch.replicas }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/component: opensearch
      {{- include "timesketch.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: opensearch
        {{- include "timesketch.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.opensearch.sysctlInit.enableInitContainer }}
      initContainers:
      - name: sysctl-init
        image: {{ .Values.opensearch.sysctlInit.image | quote }}
        imagePullPolicy: "IfNotPresent"
        command: ['/usr/local/bin/bash', '-e', '-c', 'echo 262144 > /proc/sys/vm/max_map_count'] 
        securityContext:
          runAsUser: 0
          privileged: true
      {{- end }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      hostNetwork: false
      hostIPC: false
      automountServiceAccountToken: false
      containers:
        - name: opensearch
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          image: "{{ .Values.opensearch.image.repository }}:{{ .Values.opensearch.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: node.name
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: cluster.initial_master_nodes
              value: "{{ include "timesketch.opensearch.endpoints" . }}"
            - name: discovery.seed_hosts
              value:  "{{ .Release.Name }}-opensearch-cluster"
            - name: cluster.name
              value: "opensearch-cluster"
            - name: network.host
              value: "0.0.0.0"
            - name: OPENSEARCH_JAVA_OPTS
              value: {{ .Values.opensearch.opensearchJavaOpts | quote }}
            - name: node.roles
              value: "master,ingest,data,remote_cluster_client"
            - name: DISABLE_INSTALL_DEMO_CONFIG
              value: "true"
            {{- if .Values.opensearch.selfSigned }}
            - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
              value: "admin"
            - name: plugins.security.ssl.transport.pemcert_filepath
              value: "certs/tls.crt"
            - name: plugins.security.ssl.transport.pemkey_filepath
              value: "certs/tls.key"
            - name: plugins.security.ssl.transport.pemtrustedcas_filepath
              value: "certs/ca.crt"
            - name: plugins.security.ssl.transport.enforce_hostname_verification
              value: "false"
            - name: plugins.security.ssl.http.enabled
              value: "true"
            - name: plugins.security.ssl.http.pemcert_filepath
              value: "certs/tls.crt"
            - name: plugins.security.ssl.http.pemkey_filepath
              value: "certs/tls.key"
            - name: plugins.security.ssl.http.pemtrustedcas_filepath
              value: "certs/ca.crt"
            - name: plugins.security.allow_default_init_securityindex
              value: "true"
            - name: plugins.security.nodes_dn
              value: "CN=opensearch-apps"
            {{- else }}
            - name: DISABLE_SECURITY_PLUGIN
              value: "true"
            {{- end }}
          volumeMounts:
            - mountPath: /usr/share/opensearch/data
              name: data
            {{- if .Values.opensearch.selfSigned }}
            - mountPath: /usr/share/opensearch/config/certs
              name: tls
            {{- end }}
          ports:
            - containerPort: 9200
              name: http
            - containerPort: 9300
              name: transport
            - containerPort: 9600
              name: metrics
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            tcpSocket:
              port: 9200
            timeoutSeconds: 3
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 5
            periodSeconds: 10
            tcpSocket:
              port: 9200
            timeoutSeconds: 3
          resources:
            {{- toYaml .Values.opensearch.resources | nindent 12 }}
      {{- with .Values.opensearch.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.opensearch.selfSigned }}
      volumes:
        - name: tls
          secret:
            secretName: {{ .Release.Name }}-opensearch-tls
            defaultMode: 0600
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      {{- if .Values.opensearch.persistence.storageClass }}
      storageClassName: {{ .Values.opensearch.persistence.storageClass }}
      {{- end }}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.opensearch.persistence.size }}