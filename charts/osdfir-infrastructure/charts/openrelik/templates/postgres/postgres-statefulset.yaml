apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-openrelik-postgres
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: postgres
    {{- include "openrelik.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: postgres
      {{- include "openrelik.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: postgres
        {{- include "openrelik.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      hostNetwork: false
      hostIPC: false
      automountServiceAccountToken: false
      containers:
        - name: postgres
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_DB
              value: openrelik
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-openrelik-secret 
                  key: postgres-user
            - name: PGDATA
              value: /mnt/postgres/data
          volumeMounts:
            - mountPath: /mnt/postgres/
              name: data
            - mountPath: /var/run/postgresql
              name: emptydir
            - mountPath: /tmp
              name: emptydir
          ports:
            - containerPort: 5432
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
      volumes:
        - name: emptydir
          emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}