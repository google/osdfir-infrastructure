apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-openrelik-configmap
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "openrelik.labels" . | nindent 4 }}
data:
  settings.toml: |
    [server]

    # This should be set to the URL of your backend server.
    {{- if .Values.global.ingress.openRelikAPIHost }}
    api_server_url = "https://{{ .Values.global.ingress.openRelikAPIHost }}"
    {{- else }}
    api_server_url = "http://localhost:8710"
    {{- end }}

    # This should be set to the URL of your frontend server.
    {{- if .Values.global.ingress.openRelikFrontendHost }}
    ui_server_url = "https://{{ .Values.global.ingress.openRelikFrontendHost }}"
    {{- else }}
    ui_server_url = "http://localhost:8711"
    {{- end }}
    
    # This should be set to the URL of your frontend server.
    {{- if .Values.global.ingress.openRelikFrontendHost }}
    allowed_origins = ["https://{{ .Values.global.ingress.openRelikFrontendHost }}"] 
    {{- else }}
    allowed_origins = ["http://localhost:8711"]
    {{- end }}

    # Path to files
    storage_path = "/mnt/openrelikvolume"

    [datastores.sqlalchemy]
    # Postgresql: postgresql://user:password@postgresserver/db
    database_url = ""

    [auth]
    # Secret key for the Session middleware and JWT signing.
    # IMPORTANT: Create a random string, e.g: openssl rand -base64 32
    secret_session_key = {{ randAlphaNum 32 | b64enc | quote }}
    secret_jwt_key = {{ randAlphaNum 32 | b64enc | quote }}

    # Algorithm to use for JWT.
    jwt_algorithm = "HS256"

    # UI token expiration in minutes.
    jwt_cookie_refresh_expire_minutes = 1440  # 24 hours
    jwt_cookie_access_expire_minutes = 720  # 12 hours

    # API key token expiration in minutes, if not set by the user upon creation.
    jwt_header_default_refresh_expire_minutes = 10080  # 7 days
    jwt_header_default_access_expire_minutes = 5  # 5 minutes

    [auth.google]
    # Google OAuth authentication. You need to create credentials in a Google Cloud project:
    # https://developers.google.com/workspace/guides/create-credentials#oauth-client-id
    client_id = ""
    client_secret = ""

    # Restrict logins from a Google Workspace domain.
    # Empty value = any domain, including gmail.com
    workspace_domain = ""

    # Allow only these users (email address) to access the server.
    allowlist = ["<REPLACE_WITH_USERNAME>@gmail.com"]

    # Allow anyone (who is authenitcated) to access the server.
    # Note: If a workspace_domain is set then the public_access is limited to that domain.
    # WARNING: This allows anyone to login to your server!
    public_access = false

    [ui]
    # data_types that will be rendered using unescaped HTML in a sandboxed iframe in the
    # frontend UI.
    allowed_data_types_preview = [
        "openrelik:hayabusa:html_report"
    ]

    # Enable cloud features such as adding cloud disks.
    # This requires your OpenRelik installation to run on cloud VMs.
    [cloud.gcp]
    name = "gcp"
    display_name = "Google Cloud Platform"
    project_name = ""
    zone = ""
    enabled = false