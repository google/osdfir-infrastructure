{{- $frontend := "" -}}
{{- if or (eq .Values.fleetspeak.frontend.expose "internal") (eq .Values.fleetspeak.frontend.expose "external") -}}
  {{- $frontend = .Values.fleetspeak.frontend.address -}}
{{- else }}
  {{- /* Step 1: Perform lookup, store result */}}
  {{- $lookupResult := lookup "v1" "Node" "" "" | default dict -}}
  {{- /* Step 2: Get values, store result */}}
  {{- $nodeList := $lookupResult.items -}}
  {{- if $nodeList -}}
    {{- /* Step 3: Get first node data, store result */}}
    {{- $nodeData := first $nodeList -}}
    {{- /* Step 4: Get the status */}}
    {{- $statusValue := $nodeData.status -}}
    {{- /* Step 5: Get the addresses */}}
    {{- $addressesList := $statusValue.addresses -}}
    {{- /* Step 6: Get the InternalIP address */}}
    {{- range $address := $addressesList -}}
      {{- if and (not $frontend) (eq $address.type "InternalIP") -}}
        {{- $frontend = $address.address -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}
{{- end -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-grr-job-client-builder
spec:
  template:
    spec:
      serviceAccountName: {{ .Release.Name }}-grr-sa
      initContainers:
        - name: init-fleetspeak-health-check
          image: bitnami/git
          command: ["/bin/sh", "-c"]
          args:
          - |
            set -e
            until [ "$(curl -s -w '%{http_code}' -o /dev/null http://{{ .Release.Name }}-grr-fleetspeak-frontend:{{ .Values.fleetspeak.frontend.healthCheckPort }})" -eq 200 ]
            do
              echo "Waiting for Fleetspeak Frontend to be ready";
              sleep 5;
            done
            echo "Fleetspeak Frontend health check is ready"
        - name: init-kaniko-env
          image: bitnami/git
          command: ["/bin/sh", "-c"]
          args:
          - |
            set -e
            cp /sign/keys/*.pem /grr/exe/sign/keys/
            if [ -e /sign/keys/exe-sign.crt ]
            then
              echo "Extracting public key from certificate..."
              openssl x509 -in /sign/keys/exe-sign.crt -pubkey -noout > /grr/exe/sign/keys/exe-sign-public-key.pem
            fi
            cd /kaniko-build; 
            git clone https://github.com/daschwanden/osdfir-infrastructure.git
            cd osdfir-infrastructure
            git checkout grr-v3.4.9.1
            cp /grr/grr.server.yaml charts/osdfir-infrastructure/charts/grr/containers/grr-client/config/
          volumeMounts:
          - name: grr-exe-sign-keys-volume
            mountPath: /grr/exe/sign/keys
          - name: grr-exe-sign-keys-secret
            mountPath: /sign/keys
          - name: kaniko-volume
            mountPath: /kaniko-build
          - name: grr-server-config
            mountPath: /grr/grr.server.yaml
            subPath: server.local.yaml
      containers:
        - name: kaniko
          image: gcr.io/kaniko-project/executor:latest
          args:
            - "--dockerfile=Dockerfile.kaniko"
            - "--context=dir:///kaniko-build/osdfir-infrastructure"
            - "--context-sub-path=charts/osdfir-infrastructure/charts/grr/containers/grr-client/"
            - "--build-arg=FLEETSPEAK_FRONTEND={{ $frontend }}"
            - "--build-arg=FLEETSPEAK_FRONTEND_PORT={{ .Values.fleetspeak.frontend.listenPort }}"
            {{- if .Values.grr.daemon.image }}
            - "--destination={{ .Values.grr.daemon.image }}"
            {{- else }}
            - "--no-push"
            - "--no-push-cache"
            - "--destination=nowhere-to-push-the-image"
            {{- end }}
          volumeMounts:
          - name: grr-exe-sign-keys-volume
            mountPath: /grr/exe/sign/keys
          - name: kaniko-volume
            mountPath: /kaniko-build
      restartPolicy: Never
      volumes:
        - name: kaniko-volume
          emptyDir:
            sizeLimit: 25Mi
        - name: grr-exe-sign-keys-volume
          emptyDir:
            sizeLimit: 5Mi
        - name: grr-exe-sign-keys-secret
          secret:
            secretName: {{ .Release.Name }}-grr-executable-signing-keys
        - name: grr-server-config
          secret:
            secretName: {{ .Release.Name }}-grr-server-local
            items:
            - key: server.local.yaml
              path: server.local.yaml
