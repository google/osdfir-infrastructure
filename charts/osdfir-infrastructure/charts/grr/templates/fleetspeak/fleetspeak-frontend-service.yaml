apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-grr-fleetspeak-frontend
  {{- if .Values.grr.namespaceClient }}
  namespace: {{ .Values.grr.namespaceClient }}
  {{- end }}
  annotations:
    {{- if eq .Values.fleetspeak.frontend.expose "internal" }}
    networking.gke.io/load-balancer-type: "Internal"
    {{- else if eq .Values.fleetspeak.frontend.expose "external" }}
    cloud.google.com/l4-rbs: "enabled"
    {{- end }}
spec:
  {{- if or (eq .Values.fleetspeak.frontend.expose "internal") (eq .Values.fleetspeak.frontend.expose "external") }}
  type: LoadBalancer
  loadBalancerIP: {{ .Values.fleetspeak.frontend.address }}
  {{- else }}
  type: NodePort
  {{- end }}
  selector:
    app.kubernetes.io/name: fleetspeak-frontend
  ports:
  - name: fleetspeak-frontend
    protocol: TCP
    port: {{ .Values.fleetspeak.frontend.listenPort }}
    targetPort: {{ .Values.fleetspeak.frontend.listenPort }}
    {{- if eq .Values.fleetspeak.frontend.expose "node" }}
    nodePort: {{ .Values.fleetspeak.frontend.listenPort }}
    {{- end }}
  - name: healthz
    port: {{ .Values.fleetspeak.frontend.healthCheckPort }}
    protocol: TCP
    targetPort: {{ .Values.fleetspeak.frontend.healthCheckPort }}
---
kind: Service
apiVersion: v1
metadata:
  name: fleetspeak-frontend
  {{- if .Values.grr.namespaceClient }}
  namespace: {{ .Values.grr.namespaceClient }}
  {{- end }}
spec:
  type: ExternalName
  {{- if .Values.grr.namespace }}
  externalName: {{ .Release.Name }}-fleetspeak-frontend.{{ .Values.grr.namespace }}.svc.cluster.local
  {{- else }}
  externalName: {{ .Release.Name }}-fleetspeak-frontend.default.svc.cluster.local
  {{- end }}
  ports:
  - port: {{ .Values.fleetspeak.frontend.listenPort  }}
    name: frontend
