apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-yeti
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: frontend
    {{- include "yeti.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: frontend
      {{- include "yeti.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: frontend
        {{- include "yeti.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: Always
      hostNetwork: false
      hostIPC: false
      automountServiceAccountToken: false
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 101
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              name: nginx-config
              readOnly: true
            - mountPath: /var/cache/nginx
              name: tmp
            - mountPath: /var/run/
              name: tmp
          ports:
            - containerPort: 9000
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Release.Name }}-yeti-nginx-configmap
        - name: tmp
          emptyDir: {}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
