{{- $cert := genSelfSignedCert .Values.fleetspeak.subjectCommonName nil (list "fleetspeak-frontend")  3650 }}
apiVersion: v1
kind: Secret
metadata:
  name: sec-fleetspeak-frontend-components
  {{- if .Values.grr.namespace }}
  namespace: {{ .Values.grr.namespace }}
  {{- end }}
stringData:
  frontend.components.textproto: |
    mysql_data_source_name: "{{ .Values.fleetspeak.mysqlDb.userName }}:{{ .Values.fleetspeak.mysqlDb.userPassword }}@tcp({{ .Values.fleetspeak.mysqlDb.address }}:{{ .Values.fleetspeak.mysqlDb.port }})/{{ .Values.fleetspeak.mysqlDb.name }}"
    https_config: <
      listen_address: "0.0.0.0:{{ .Values.fleetspeak.frontend.listenPort }}"
      {{- if .Values.fleetspeak.generateCert }}
      certificates: {{ $cert.Cert | quote }}
      key: {{ $cert.Key | quote }}
      {{- else }}
      certificates: {{ default (.Files.Get "../../certs/fleetspeak-frontend.crt") .Values.fleetspeak.frontend.cert | quote }}
      key: {{ default (.Files.Get "../../certs/fleetspeak-frontend.key") .Values.fleetspeak.frontend.key | quote }}
      {{- end }}
      {{- if .Values.fleetspeak.httpsHeaderChecksum }}
      frontend_config: <
        https_header_checksum_config: <
          client_certificate_header: "client-certificate" 
          client_certificate_checksum_header: "X-Client-Cert-Hash"
        >
      >
      {{- end }}
    >
    health_check_config: <
      listen_address: "0.0.0.0:{{ .Values.fleetspeak.frontend.healthCheckPort }}"
    >
    notification_listen_address: "0.0.0.0:{{ .Values.fleetspeak.frontend.notificationPort }}"
    notification_public_address: "FLEETSPEAK_FRONTEND_IP:{{ .Values.fleetspeak.frontend.notificationPort }}"
    stats_config: <
      address: "0.0.0.0:{{ .Values.prometheus.metricsPort }}"
    >
